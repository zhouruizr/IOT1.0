//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataProvider
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class NERPEntities : DbContext
    {
        public NERPEntities()
            : base("name=NERPEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<SYS_ButtonGroup> SYS_ButtonGroup { get; set; }
        public DbSet<SYS_Dics> SYS_Dics { get; set; }
        public DbSet<SYS_Account> SYS_Account { get; set; }
        public DbSet<SYS_AccountRole> SYS_AccountRole { get; set; }
        public DbSet<SYS_Button> SYS_Button { get; set; }
        public DbSet<SYS_Company> SYS_Company { get; set; }
        public DbSet<SYS_DicCategory> SYS_DicCategory { get; set; }
        public DbSet<SYS_FunctionItem> SYS_FunctionItem { get; set; }
        public DbSet<SYS_FunctionTree> SYS_FunctionTree { get; set; }
        public DbSet<SYS_RoleFunction> SYS_RoleFunction { get; set; }
        public DbSet<SYS_SystemRole> SYS_SystemRole { get; set; }
        public DbSet<vw_AccountRole> vw_AccountRole { get; set; }
        public DbSet<vw_Authority> vw_Authority { get; set; }
        public DbSet<vw_Dics> vw_Dics { get; set; }
        public DbSet<vw_FunctionItem> vw_FunctionItem { get; set; }
        public DbSet<vw_RoleFunctionItem> vw_RoleFunctionItem { get; set; }
    
        public virtual ObjectResult<sp_AuthorityWap_Result> sp_AuthorityWap(string staffId)
        {
            var staffIdParameter = staffId != null ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AuthorityWap_Result>("sp_AuthorityWap", staffIdParameter);
        }
    
        public virtual int sp_Authority(string staffId)
        {
            var staffIdParameter = staffId != null ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Authority", staffIdParameter);
        }
    
        public virtual int sp_CreatePassword(string user, string originalPwd, ObjectParameter recordCount)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var originalPwdParameter = originalPwd != null ?
                new ObjectParameter("originalPwd", originalPwd) :
                new ObjectParameter("originalPwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreatePassword", userParameter, originalPwdParameter, recordCount);
        }
    }
}
